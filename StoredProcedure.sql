--PROCEDURE TO CHECK CUSTOMER LOGIN ---
--IF CUSTOMER CREDENTIALS ARE CORRECT --
-- PROCEDURE WILL RETURN CUSTOMERID ELSE RETURN ERROR MSG-- 
Create Procedure Sp_AuthenticateCustomer
@CustomerName 	VARCHAR(150),
@Password		NVARCHAR(50)
AS BEGIN
SET NOCOUNT ON

	DECLARE @ISEXISTS NVARCHAR(36) = (SELECT CUSTOMERID 
										FROM Customer
										WHERE	CustomerName=@CustomerName)
	
	IF(@ISEXISTS IS NULL)
		SELECT 'CUSTOMER IS NOT REGISTERED' AS RESULT
	ELSE
		BEGIN
			DECLARE @ACTUALPASSWORD NVARCHAR(36) = (SELECT PASSWORD 
												FROM Customer
												WHERE	CustomerName=@CustomerName)
			IF(@ACTUALPASSWORD = @Password)
				SELECT @ISEXISTS AS RESULT
			ELSE
				SELECT 'INCORRECT PASSWORD' AS RESULT
		END
										

SET NOCOUNT OFF
END

-----PROCEDURE TO GET ALL VEHICLES OF A CUSTOMER------
Create Procedure Sp_GETALLVEHICLE
@CUSTOMERID 	NVARCHAR(36)
AS BEGIN
SET NOCOUNT ON

	SELECT 		C.NAME AS CustomerName,
				LATITUDE,
				LONGITUDE,
				SPEED,
				RATING,
				VIN,
				LICENSEPLATE,
				SPEED,
				D.NAME AS DRIVERNAME
	FROM		CUSTOMER AS C
	INNER JOIN	VEHICLES AS V
	ON			V.CUSTOMERID = C.CUSTOMERID
	INNER JOIN	DRIVER AS D 
	ON			D.DRIVERID = V.DRIVERID
	WHERE		C.CUSTOMERID = @CUSTOMERID										

SET NOCOUNT OFF
END

-----PROCEDURE TO GET VEHICLES OF A CUSTOMER BASED ON SEARCHTEXT------
Create Procedure Sp_GETALLVEHICLEWITHSEARCHTEXT
@CUSTOMERID 	NVARCHAR(36),
@SEARCHTEXT     NVARCHAR(50)
AS BEGIN
SET NOCOUNT ON

	SET @SEARCHTEXT = '%'+SEARCHTEXT+'%'
	
	SELECT 		DISTINCT VIN,
				C.NAME AS CustomerName,
				LATITUDE,
				LONGITUDE,
				SPEED,
				RATING,
				LICENSEPLATE,
				SPEED,
				D.NAME AS DRIVERNAME
	FROM		CUSTOMER AS C
	INNER JOIN	VEHICLES AS V
	ON			V.CUSTOMERID = C.CUSTOMERID
	INNER JOIN	DRIVER AS D 
	ON			D.DRIVERID = V.DRIVERID
	WHERE		C.CUSTOMERID = @CUSTOMERID	
	AND			(C.CustomerName LIKE SEARCHTEXT ||
				C.LICENSEPLATE LIKE SEARCHTEXT  ||
				C.VIN LIKE SEARCHTEXT
	)

SET NOCOUNT OFF
END

-----PROCEDURE TO GET ALL VEHICLES OF A CUSTOMER------
Create Procedure Sp_GETALLVEHICLEWITHCOUNT
@CUSTOMERID 	NVARCHAR(36),
@COUNT			INT
AS BEGIN
SET NOCOUNT ON

	SELECT 		C.NAME AS CustomerName,
				LATITUDE,
				LONGITUDE,
				SPEED,
				RATING,
				VIN,
				LICENSEPLATE,
				SPEED,
				D.NAME AS DRIVERNAME
	FROM		CUSTOMER AS C
	INNER JOIN	VEHICLES AS V
	ON			V.CUSTOMERID = C.CUSTOMERID
	INNER JOIN	DRIVER AS D 
	ON			D.DRIVERID = V.DRIVERID
	WHERE		C.CUSTOMERID = @CUSTOMERID										
	ORDER BY 	VIN ASC
	OFFSET 		@COUNT ROW
	FETCH NEXT 	10 ROWS ONLY
	
SET NOCOUNT OFF
END

-----PROCEDURE TO UPDATE VEHICLE DATA------
Create Procedure Sp_UPDATEVEHICLEDATA
@VIN 			NVARCHAR(36),
@LICENSEPLATE	VARCHAR(15),
@DRIVERID		NVARCHAR(150)
AS BEGIN
SET NOCOUNT ON

	UPDATE 	VEHICLE
			LICENSEPLATE = @LICENSEPLATE,
			DRIVERID = @DRIVERID
	WHERE 	VIN = @VIN		
	
SET NOCOUNT OFF
END